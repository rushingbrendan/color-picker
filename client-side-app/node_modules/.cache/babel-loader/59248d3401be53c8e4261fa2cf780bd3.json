{"ast":null,"code":"var _jsxFileName = \"/Users/rushing/color-picker/client-side-app/src/components/ColorPicker.js\";\nimport React, { Component } from 'react';\nimport '../css/bootstrap.min.css';\nimport '../css/HeaderBar.css';\nimport '../css/ColorPicker.css';\nimport '../css/ColorSlider.css';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faStroopwafel } from '@fortawesome/free-solid-svg-icons';\nimport { faEyeDropper } from '@fortawesome/free-solid-svg-icons';\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons';\nimport { faMinusCircle } from '@fortawesome/free-solid-svg-icons';\nlibrary.add(faStroopwafel);\nlibrary.add(faEyeDropper);\nlibrary.add(faPlusCircle);\nlibrary.add(faMinusCircle);\n\nclass ColorPicker extends Component {\n  constructor() {\n    super();\n    this.state = {\n      favoriteColors: [],\n      colorHexCode: 0,\n      red: 0,\n      green: 0,\n      blue: 0\n    };\n  }\n\n  updateRed(event) {\n    this.setState({\n      red: event.target.value\n    });\n    return true;\n  }\n\n  updateGreen(event) {\n    this.setState({\n      green: event.target.value\n    });\n    return true;\n  }\n\n  updateBlue(event) {\n    this.setState({\n      blue: event.target.value\n    });\n    return true;\n  } // addColor(event) {\n  //     // Create \n  //     // Populate html object for color card.\n  //     this.state.favoriteColors.push()\n  //     // this.setState({\n  //     //   red: event.target.value\n  //     // });\n  //     return true;\n  // }\n\n\n  addFavourite() {\n    var hexColorCode = this.rgb2hex(this.state.red, this.state.green, this.state.blue); //Check if selected item is already in array\n\n    if (!this.state.favoriteColors.includes(hexColorCode)) {\n      //add item to array            \n      this.state.favoriteColors.push(hexColorCode);\n    }\n  }\n  /* \n      Function name: updateSearchInput\n      \n      Purpose:    Function is called when the text in the input search box has changed.\n                  The value from the event is put into searchInput variable in class state.\n              \n      Parameters:     event\n      Return:         true\n  */\n\n\n  updateSearchInput(event, colorOrder) {\n    // This is red.\n    if (colorOrder === 1) {\n      // Set the red color state.\n      this.setState({\n        red: event.target.value\n      });\n    } // This is green.\n    else if (colorOrder === 2) {\n        // Set the green color state.\n        this.setState({\n          green: event.target.value\n        });\n      } // This is blue.\n      else if (colorOrder === 3) {\n          // Set the blue color state.\n          this.setState({\n            blue: event.target.value\n          });\n        }\n\n    return true;\n  }\n\n  componentToHex(c) {\n    var hex = c.toString(16);\n    return hex.length === 1 ? \"0\" + hex : hex;\n  }\n\n  rgbToHex(r, g, b) {\n    return \"#\" + this.componentToHex(r) + this.componentToHex(g) + this.componentToHex(b);\n  } //alert(rgbToHex(0, 51, 255)); // #0033ff\n\n\n  rgb2hex(red, green, blue) {\n    var rgb = blue | green << 8 | red << 16;\n    var returnString = '#' + (0x1000000 + rgb).toString(16).slice(1);\n    returnString = returnString.toUpperCase(); //return '#' + (0x1000000 + rgb).toString(16).slice(1);\n\n    return returnString;\n  }\n\n  renderColorHexCode() {\n    var hexColorCode = this.rgb2hex(this.state.red, this.state.green, this.state.blue);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, hexColorCode));\n  }\n\n  renderFavoriteColors() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, this.state.favoriteColors.map(currentColor => React.createElement(\"div\", {\n      className: \"shadow-md p-3 mb-5 bg-white rounded col-4\",\n      style: {\n        backgroundColor: \"white\",\n        borderColor: \"black\",\n        borderWidth: \"5px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"alert alert-dismissible fade show\",\n      role: \"alert\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, currentColor), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"close\",\n      \"data-dismiss\": \"alert\",\n      \"aria-label\": \"Close\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"\\xD7\")), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"\",\n      style: {\n        backgroundColor: \"\".concat(currentColor)\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    })))))));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, \"Create Color\")), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, \"Red\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\")), React.createElement(\"th\", {\n      style: {\n        width: '100px',\n        alignItems: 'right'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      class: \"form-control\",\n      placeholder: \"\",\n      maxLength: \"3\",\n      value: this.state.red,\n      onChange: event => this.updateSearchInput(event, 1),\n      onKeyDown: event => {\n        if (event.target.value === '') {//this.submitForm()\n        } else if (event.key === 'Enter') {//this.submitForm();\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    })), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\")), React.createElement(\"th\", {\n      style: {\n        width: '600px',\n        alignItems: 'right'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"slider\",\n      id: \"redSlider\",\n      type: \"range\",\n      min: \"0\",\n      max: \"256\",\n      defaultValue: \"3\",\n      step: \"1\",\n      onChange: event => this.updateRed(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    })), React.createElement(\"th\", {\n      style: {\n        width: '50px',\n        alignItems: 'right'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, this.state.red)))))), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, \"Green\\xA0\\xA0\\xA0\")), React.createElement(\"th\", {\n      style: {\n        width: '100px',\n        alignItems: 'right'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      class: \"form-control\",\n      placeholder: \"\",\n      maxLength: \"3\",\n      value: this.state.green,\n      onChange: event => this.updateSearchInput(event, 2),\n      onKeyDown: event => {\n        if (event.target.value === '') {//this.submitForm()\n        } else if (event.key === 'Enter') {//this.submitForm();\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    })), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\")), React.createElement(\"th\", {\n      style: {\n        width: '600px',\n        alignItems: 'right'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"slider\",\n      id: \"greenSlider\",\n      type: \"range\",\n      min: \"0\",\n      max: \"256\",\n      defaultValue: \"3\",\n      step: \"1\",\n      onChange: event => this.updateGreen(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    })), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, this.state.green))))), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, \"Blue\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\")), React.createElement(\"th\", {\n      style: {\n        width: '100px',\n        alignItems: 'right'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      class: \"form-control\",\n      placeholder: \"\",\n      maxLength: \"3\",\n      value: this.state.blue,\n      onChange: event => this.updateSearchInput(event, 3),\n      onKeyDown: event => {\n        if (event.target.value === '') {//this.submitForm();\n        } else if (event.key === 'Enter') {//this.submitForm();\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    })), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\")), React.createElement(\"th\", {\n      style: {\n        width: '600px',\n        alignItems: 'right'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"slider\",\n      id: \"blueSlider\",\n      type: \"range\",\n      min: \"0\",\n      max: \"256\",\n      defaultValue: \"3\",\n      step: \"1\",\n      onChange: event => this.updateBlue(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    })), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }, this.state.blue)))))), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    }, this.renderColorHexCode())), React.createElement(\"div\", {\n      className: \"col-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-success\",\n      onClick: event => this.addFavourite(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }, \" Copy Color \")))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      style: {\n        backgroundColor: \"rgb(\".concat(this.state.red, \",\").concat(this.state.green, \",\").concat(this.state.blue, \")\")\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373\n      },\n      __self: this\n    }))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377\n      },\n      __self: this\n    }, this.renderFavoriteColors()), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default ColorPicker;","map":{"version":3,"sources":["/Users/rushing/color-picker/client-side-app/src/components/ColorPicker.js"],"names":["React","Component","library","FontAwesomeIcon","faStroopwafel","faEyeDropper","faPlusCircle","faMinusCircle","add","ColorPicker","constructor","state","favoriteColors","colorHexCode","red","green","blue","updateRed","event","setState","target","value","updateGreen","updateBlue","addFavourite","hexColorCode","rgb2hex","includes","push","updateSearchInput","colorOrder","componentToHex","c","hex","toString","length","rgbToHex","r","g","b","rgb","returnString","slice","toUpperCase","renderColorHexCode","renderFavoriteColors","map","currentColor","backgroundColor","borderColor","borderWidth","render","width","alignItems","key"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport '../css/bootstrap.min.css';\nimport '../css/HeaderBar.css';\nimport '../css/ColorPicker.css';\nimport '../css/ColorSlider.css';\n\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faStroopwafel } from '@fortawesome/free-solid-svg-icons';\nimport { faEyeDropper} from '@fortawesome/free-solid-svg-icons';\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons';\nimport { faMinusCircle } from '@fortawesome/free-solid-svg-icons';\n\n\n\nlibrary.add(faStroopwafel);\nlibrary.add(faEyeDropper);\nlibrary.add(faPlusCircle);\nlibrary.add(faMinusCircle);\n\n\nclass ColorPicker extends Component {\n    constructor(){\n      super();\n\n      this.state = { \n          favoriteColors: [],\n          colorHexCode: 0,\n          red: 0,\n          green: 0,\n          blue: 0,\n        };\n\n    }\n    updateRed(event) {\n\n        this.setState({\n          red: event.target.value\n        });\n        \n        return true;\n    }\n\n    updateGreen(event) {\n\n        this.setState({\n          green: event.target.value\n        });\n        \n        return true;\n    }\n\n    updateBlue(event) {\n\n        this.setState({\n          blue: event.target.value\n        });\n        \n        return true;\n    }\n\n    // addColor(event) {\n\n    //     // Create \n\n    //     // Populate html object for color card.\n    //     this.state.favoriteColors.push()\n    //     // this.setState({\n    //     //   red: event.target.value\n    //     // });\n        \n    //     return true;\n    // }\n\n\n    addFavourite() {  \n         \n        var hexColorCode = this.rgb2hex(this.state.red, this.state.green, this.state.blue);\n\n        //Check if selected item is already in array\n        if (!this.state.favoriteColors.includes(hexColorCode)){\n            //add item to array            \n            this.state.favoriteColors.push(hexColorCode);   \n        }\n    }\n\n\n\n    /* \n        Function name: updateSearchInput\n        \n        Purpose:    Function is called when the text in the input search box has changed.\n                    The value from the event is put into searchInput variable in class state.\n                \n        Parameters:     event\n        Return:         true\n    */\n   updateSearchInput(event, colorOrder) {\n\n    // This is red.\n    if (colorOrder === 1){\n\n        \n        // Set the red color state.\n        this.setState({\n            red: event.target.value\n        });\n        \n    }\n\n    // This is green.\n    else if (colorOrder === 2){\n\n        // Set the green color state.\n        this.setState({\n            green: event.target.value\n        });\n    }\n\n    // This is blue.\n    else if (colorOrder === 3){\n\n        // Set the blue color state.\n        this.setState({\n            blue: event.target.value\n        });\n    }\n\n\n    \n    return true;\n}\n\n    componentToHex(c) {\n        var hex = c.toString(16);\n        return hex.length === 1 ? \"0\" + hex : hex;\n    }\n  \n    rgbToHex(r, g, b) {        \n\n        return \"#\" + this.componentToHex(r) + this.componentToHex(g) + this.componentToHex(b);\n  }\n  \n  //alert(rgbToHex(0, 51, 255)); // #0033ff\n\n    rgb2hex(red, green, blue) {\n        var rgb = blue | (green << 8) | (red << 16);\n\n        var returnString = '#' + (0x1000000 + rgb).toString(16).slice(1);        \n        returnString = returnString.toUpperCase();\n\n        //return '#' + (0x1000000 + rgb).toString(16).slice(1);\n        return returnString;\n    }    \n\n    renderColorHexCode(){\n\n        var hexColorCode = this.rgb2hex(this.state.red, this.state.green, this.state.blue);\n\n        return (<div><h1>{hexColorCode}</h1></div>)\n    }\n\n    renderFavoriteColors(){\n\n\n        return (<div className=\"container\">\n            <div className=\"row\">\n\n            {this.state.favoriteColors.map(currentColor=>    \n            <div className=\"shadow-md p-3 mb-5 bg-white rounded col-4\" style={{ backgroundColor: `white`, borderColor: `black`, borderWidth: `5px` }}>\n                <div className=\"alert alert-dismissible fade show\" role=\"alert\" >\n                    <h5>{currentColor}</h5>\n                <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n                        <span aria-hidden=\"true\">&times;</span>\n                </button>\n                <hr></hr>\n                \n                        <div className=\"\" style={{ backgroundColor: `${currentColor}` }}>\n                        <br></br>\n                        <br></br>\n                    <br></br>\n                    <br></br>\n                    <br></br>\n                    <br></br>\n                        </div>\n                    \n\n                </div>\n            </div>\n            )}\n        </div>\n        </div>)\n    }\n\n\n\n    render() {\n      return (        \n        <div>\n            <br></br>\n            <div className=\"container\">\n                <h1>Create Color</h1>\n             </div>\n            \n            <hr></hr>\n            <br></br>               \n               <div className=\"container\">\n                  <table>\n                    <tbody>\n                        <tr>                    \n                            <th>\n                                <h3>Red&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</h3>\n                            </th>\n                            <th style={{width: '100px', alignItems: 'right'}}>                            \n                                <input type=\"text\" class=\"form-control\" placeholder=\"\" maxLength='3' value={this.state.red}\n                                    onChange={event => this.updateSearchInput(event,1)}\n                                    onKeyDown={event => {\n                                        if (event.target.value === ''){\n                                            //this.submitForm()\n                                        }                                        \n                                        else if (event.key === 'Enter') {                        \n                                            //this.submitForm();\n                                        }                      \n                                    }}>\n                                </input>\n                            </th>\n                            <th>\n                            {/* <FontAwesomeIcon icon=\"minus-circle\" size=\"2x\" color=\"#ff0000\" /> */}\n                            \n                            </th>\n                            <th>\n                            {/* <FontAwesomeIcon icon=\"plus-circle\" size=\"2x\" color=\"#13bf41\"/> */}\n                            </th>\n                            <th><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div></th>\n                            \n                            <th style={{width: '600px',\n                                        alignItems: 'right' }}>                        \n                                <input className=\"slider\" id=\"redSlider\" type=\"range\" min=\"0\" max=\"256\" defaultValue=\"3\" step=\"1\"\n                                onChange={event => this.updateRed(event)}\n                                />\n                            </th>\n                            <th style={{width: '50px',\n                                        alignItems: 'right' }}>      \n                            <h1>{this.state.red}</h1>\n                            </th>\n                            \n\n\n                        </tr>\n                    </tbody>\n                </table>                \n               </div>\n               {/* <br></br> */}\n               <div className=\"container\">\n               <table>\n                   <tbody>\n                        <tr>                    \n                            <th>\n                            <h3>Green&nbsp;&nbsp;&nbsp;</h3>\n                            </th>\n\n                            <th style={{width: '100px',\n                                    alignItems: 'right'}}>\n                            {/* <NumericInput min={0} max={256} value={50}/>   */}\n                            <input type=\"text\" class=\"form-control\" placeholder=\"\" maxLength='3' value={this.state.green}\n                             onChange={event => this.updateSearchInput(event,2)}\n                             onKeyDown={event => {\n                            if (event.target.value === ''){\n                                //this.submitForm()\n                            }                                        \n                            else if (event.key === 'Enter') {                        \n                                //this.submitForm();\n                            }                      \n                            }}>\n                            </input>\n\n                        </th>\n                        <th>\n                        {/* <FontAwesomeIcon icon=\"minus-circle\" size=\"2x\" color=\"#ff0000\"/> */}\n                        </th>\n                        <th>\n                        {/* <FontAwesomeIcon icon=\"plus-circle\" size=\"2x\" color=\"#13bf41\"/> */}\n                        </th>\n                        <th><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div></th>\n                        <th style={{width: '600px',\n                                    alignItems: 'right' }}>                        \n                            <input className=\"slider\" id=\"greenSlider\" type=\"range\" min=\"0\" max=\"256\" defaultValue=\"3\" step=\"1\"\n                            onChange={event => this.updateGreen(event)}/>\n                        </th>\n                        <h1>{this.state.green}</h1>\n                        </tr>\n                    </tbody>\n                </table>                \n               </div>\n               {/* <br></br> */}\n               <div className=\"container\">\n               <table>\n                   <tbody>\n                        <tr>                    \n                            <th>\n                            <h3>Blue&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</h3>\n                            </th>\n                            <th style={{width: '100px',\n                                    alignItems: 'right'}}>\n                            {/* <NumericInput min={0} max={256} value={50}/>   */}\n                            <input type=\"text\" class=\"form-control\" placeholder=\"\" maxLength='3' value={this.state.blue}\n                             onChange={event => this.updateSearchInput(event,3)}\n                             onKeyDown={event => {\n                            if (event.target.value === ''){\n                                //this.submitForm();\n                            }                                        \n                            else if (event.key === 'Enter') {                        \n                                //this.submitForm();\n                            }                      \n                            }}>\n                            </input>\n\n                        </th>\n                        <th>\n                        {/* <FontAwesomeIcon icon=\"minus-circle\" size=\"2x\" color=\"#ff0000\"/> */}\n                        </th>\n                        <th>\n                        {/* <FontAwesomeIcon icon=\"plus-circle\" size=\"2x\" color=\"#13bf41\"/> */}\n                        </th>\n                        <th><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div></th>\n                        <th style={{width: '600px',\n                                    alignItems: 'right' }}>                        \n                            <input className=\"slider\" id=\"blueSlider\" type=\"range\" min=\"0\" max=\"256\" defaultValue=\"3\" step=\"1\"\n                            onChange={event => this.updateBlue(event)}/>\n                        </th>\n                        <th>\n                            <h1>{this.state.blue}</h1>\n                        </th>\n                        </tr>\n                </tbody>\n            </table>                \n               </div>\n\n               {/* <br></br> */}\n               <hr></hr>\n\n               <div className=\"container\">\n                <div className=\"form-row\">\n\n                    <div className=\"col-2\">\n                        <div>{this.renderColorHexCode()}</div>\n                    </div>\n\n                    <div className=\"col-6\">                    \n                        <button type=\"button\" class=\"btn btn-success\"\n                            onClick={event => this.addFavourite(event)}> Copy Color </button>        \n                    </div>                    \n                </div>\n               </div>               \n               <br></br>\n               <div className=\"container\">\n  \n  \n    <div className=\"container\" \n    style={{ backgroundColor: `rgb(${this.state.red},${this.state.green},${this.state.blue})` }}>\n        <br></br>\n        <br></br>\n        <br></br>\n        \n        <br></br>\n        <br></br>\n        <br></br>\n        <br></br>\n        <br></br>        \n  \n        <br></br>\n        <br></br>\n  </div>\n</div>\n<br></br>\n<div>{this.renderFavoriteColors()}</div>\n<br></br>\n         </div>\n      );\n    }\n  }\n  \n  export default ColorPicker;"]},"metadata":{},"sourceType":"module"}