{"ast":null,"code":"var _jsxFileName = \"/Users/rushing/2019-colorpicker/color-picker/src/components/ColorPicker.js\";\nimport React, { Component } from 'react';\nimport '../css/bootstrap.min.css';\nimport '../css/HeaderBar.css';\nimport '../css/ColorPicker.css';\nimport '../css/ColorSlider.css';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faStroopwafel } from '@fortawesome/free-solid-svg-icons';\nimport { faEyeDropper } from '@fortawesome/free-solid-svg-icons';\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons';\nimport { faMinusCircle } from '@fortawesome/free-solid-svg-icons';\nlibrary.add(faStroopwafel);\nlibrary.add(faEyeDropper);\nlibrary.add(faPlusCircle);\nlibrary.add(faMinusCircle);\n\nclass ColorPicker extends Component {\n  constructor() {\n    super();\n    this.state = {\n      red: 0,\n      green: 0,\n      blue: 0\n    };\n  }\n\n  updateRed(event) {\n    this.setState({\n      red: event.target.value\n    });\n    return true;\n  }\n\n  updateGreen(event) {\n    this.setState({\n      green: event.target.value\n    });\n    return true;\n  }\n\n  updateBlue(event) {\n    this.setState({\n      blue: event.target.value\n    });\n    return true;\n  }\n  /* \n      Function name: updateSearchInput\n      \n      Purpose:    Function is called when the text in the input search box has changed.\n                  The value from the event is put into searchInput variable in class state.\n              \n      Parameters:     event\n      Return:         true\n  */\n\n\n  updateSearchInput(event, colorOrder) {\n    // This is red.\n    if (colorOrder === 1) {\n      // Set the red color state.\n      this.setState({\n        red: event.target.value\n      });\n    } // This is green.\n    else if (colorOrder === 2) {\n        // Set the green color state.\n        this.setState({\n          green: event.target.value\n        });\n      } // This is blue.\n      else if (colorOrder === 3) {\n          // Set the blue color state.\n          this.setState({\n            blue: event.target.value\n          });\n        }\n\n    return true;\n  }\n\n  DisplayColors() {\n    let colorBoxes = []; // Loop through all colors.\n\n    for (let i = 0; i < 10000; i++) {\n      i = i + 10; // Convert integer value to hex.\n\n      var hexCode = i.toString(16);\n      var currentColor = '#'; // Check if color hexcode is smaller than 6 and needs to be filled with 0's.\n\n      if (hexCode.length < 6) {\n        for (var y = 0; y < 6 - hexCode.length; y++) {\n          currentColor += '0';\n        }\n\n        currentColor += hexCode;\n        currentColor = currentColor.toUpperCase();\n      }\n\n      colorBoxes.push(React.createElement(\"div\", {\n        key: i,\n        className: \"colorBox\",\n        style: {\n          backgroundColor: \"\".concat(currentColor)\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"colorBoxContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, colorBoxes);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"Red\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\")), React.createElement(\"th\", {\n      style: {\n        width: '100px',\n        alignItems: 'right'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      class: \"form-control\",\n      placeholder: \"\",\n      maxLength: \"3\",\n      value: this.state.red,\n      onChange: event => this.updateSearchInput(event, 1),\n      onKeyDown: event => {\n        if (event.target.value === '') {//this.submitForm()\n        } else if (event.key === 'Enter') {//this.submitForm();\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    })), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\")), React.createElement(\"th\", {\n      style: {\n        width: '500px',\n        alignItems: 'right'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"slider\",\n      id: \"redSlider\",\n      type: \"range\",\n      min: \"0\",\n      max: \"256\",\n      defaultValue: \"3\",\n      step: \"1\",\n      onChange: event => this.updateRed(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    })), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, this.state.red))))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, \"Green\\xA0\\xA0\\xA0\")), React.createElement(\"th\", {\n      style: {\n        width: '100px',\n        alignItems: 'right'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      class: \"form-control\",\n      placeholder: \"\",\n      maxLength: \"3\",\n      value: this.state.green,\n      onChange: event => this.updateSearchInput(event, 2),\n      onKeyDown: event => {\n        if (event.target.value === '') {//this.submitForm()\n        } else if (event.key === 'Enter') {//this.submitForm();\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    })), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\")), React.createElement(\"th\", {\n      style: {\n        width: '500px',\n        alignItems: 'right'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"slider\",\n      id: \"greenSlider\",\n      type: \"range\",\n      min: \"0\",\n      max: \"256\",\n      defaultValue: \"3\",\n      step: \"1\",\n      onChange: event => this.updateGreen(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    })), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, this.state.green))))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, \"Blue\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\")), React.createElement(\"th\", {\n      style: {\n        width: '100px',\n        alignItems: 'right'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      class: \"form-control\",\n      placeholder: \"\",\n      maxLength: \"3\",\n      value: this.state.blue,\n      onChange: event => this.updateSearchInput(event, 3),\n      onKeyDown: event => {\n        if (event.target.value === '') {//this.submitForm();\n        } else if (event.key === 'Enter') {//this.submitForm();\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    })), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\")), React.createElement(\"th\", {\n      style: {\n        width: '500px',\n        alignItems: 'right'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"slider\",\n      id: \"blueSlider\",\n      type: \"range\",\n      min: \"0\",\n      max: \"256\",\n      defaultValue: \"3\",\n      step: \"1\",\n      onChange: event => this.updateBlue(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    })), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, this.state.blue)))))), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-body\",\n      style: {\n        backgroundColor: \"rgb(\".concat(this.state.red, \",\").concat(this.state.green, \",\").concat(this.state.blue, \")\")\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    })))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default ColorPicker;","map":{"version":3,"sources":["/Users/rushing/2019-colorpicker/color-picker/src/components/ColorPicker.js"],"names":["React","Component","library","FontAwesomeIcon","faStroopwafel","faEyeDropper","faPlusCircle","faMinusCircle","add","ColorPicker","constructor","state","red","green","blue","updateRed","event","setState","target","value","updateGreen","updateBlue","updateSearchInput","colorOrder","DisplayColors","colorBoxes","i","hexCode","toString","currentColor","length","y","toUpperCase","push","backgroundColor","render","width","alignItems","key"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport '../css/bootstrap.min.css';\nimport '../css/HeaderBar.css';\nimport '../css/ColorPicker.css';\nimport '../css/ColorSlider.css';\n\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faStroopwafel } from '@fortawesome/free-solid-svg-icons';\nimport { faEyeDropper} from '@fortawesome/free-solid-svg-icons';\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons';\nimport { faMinusCircle } from '@fortawesome/free-solid-svg-icons';\n\n\n\nlibrary.add(faStroopwafel);\nlibrary.add(faEyeDropper);\nlibrary.add(faPlusCircle);\nlibrary.add(faMinusCircle);\n\n\nclass ColorPicker extends Component {\n    constructor(){\n      super();\n\n      this.state = { \n          red: 0,\n          green: 0,\n          blue: 0,\n        };\n\n    }\n    updateRed(event) {\n\n        this.setState({\n          red: event.target.value\n        });\n        \n        return true;\n    }\n\n    updateGreen(event) {\n\n        this.setState({\n          green: event.target.value\n        });\n        \n        return true;\n    }\n\n    updateBlue(event) {\n\n        this.setState({\n          blue: event.target.value\n        });\n        \n        return true;\n    }\n\n\n    /* \n        Function name: updateSearchInput\n        \n        Purpose:    Function is called when the text in the input search box has changed.\n                    The value from the event is put into searchInput variable in class state.\n                \n        Parameters:     event\n        Return:         true\n    */\n   updateSearchInput(event, colorOrder) {\n\n    // This is red.\n    if (colorOrder === 1){\n\n        \n        // Set the red color state.\n        this.setState({\n            red: event.target.value\n        });\n        \n    }\n\n    // This is green.\n    else if (colorOrder === 2){\n\n        // Set the green color state.\n        this.setState({\n            green: event.target.value\n        });\n    }\n\n    // This is blue.\n    else if (colorOrder === 3){\n\n        // Set the blue color state.\n        this.setState({\n            blue: event.target.value\n        });\n    }\n\n\n    \n    return true;\n}\n\n\n    DisplayColors(){\n\n        let colorBoxes= []\n\n        // Loop through all colors.\n        for (let i = 0; i < 10000; i++) {\n\n            i = i + 10;\n\n            // Convert integer value to hex.\n            var hexCode = i.toString(16);            \n            var currentColor = '#';\n\n            // Check if color hexcode is smaller than 6 and needs to be filled with 0's.\n            if (hexCode.length < 6){\n\n                for (var y=0; y < 6 - hexCode.length; y++){\n                    currentColor += '0';\n                }\n                currentColor += hexCode;\n                currentColor = currentColor.toUpperCase();\n            }          \n\n          colorBoxes.push(<div key={i} className=\"colorBox\" style={{backgroundColor: `${currentColor}`}}></div>)\n          \n        }\n        return(\n            <div className=\"colorBoxContainer\">{colorBoxes}</div>\n        )\n    }\n    \n\n    render() {\n      return (        \n        <div>\n               <br></br>\n               <hr></hr>\n               <div className=\"container\">\n               <table>\n                   <tbody>\n                    <tr>                    \n                        <th>\n                        <h3>Red&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</h3>\n                        </th>\n                        <th style={{width: '100px',\n                                    alignItems: 'right'}}>\n                            {/* <NumericInput min={0} max={256} value={50}/>   */}\n                            <input type=\"text\" class=\"form-control\" placeholder=\"\" maxLength='3' value={this.state.red}\n                             onChange={event => this.updateSearchInput(event,1)}\n                             onKeyDown={event => {\n                            if (event.target.value === ''){\n                                //this.submitForm()\n                            }                                        \n                            else if (event.key === 'Enter') {                        \n                                //this.submitForm();\n                            }                      \n                            }}>\n                            </input>\n\n                        </th>\n                        <th>\n                        {/* <FontAwesomeIcon icon=\"minus-circle\" size=\"2x\" color=\"#ff0000\" /> */}\n                        \n                        </th>\n                        <th>\n                        {/* <FontAwesomeIcon icon=\"plus-circle\" size=\"2x\" color=\"#13bf41\"/> */}\n                        </th>\n                        <th><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div></th>\n                        \n                        <th style={{width: '500px',\n                                    alignItems: 'right' }}>                        \n                            <input className=\"slider\" id=\"redSlider\" type=\"range\" min=\"0\" max=\"256\" defaultValue=\"3\" step=\"1\"\n                            onChange={event => this.updateRed(event)}\n                            />\n                        </th>\n                        <h2>{this.state.red}</h2>\n\n\n                    </tr>\n                </tbody>\n            </table>                \n               </div>\n               <br></br>\n               <div className=\"container\">\n               <table>\n                   <tbody>\n                        <tr>                    \n                            <th>\n                            <h3>Green&nbsp;&nbsp;&nbsp;</h3>\n                            </th>\n\n                            <th style={{width: '100px',\n                                    alignItems: 'right'}}>\n                            {/* <NumericInput min={0} max={256} value={50}/>   */}\n                            <input type=\"text\" class=\"form-control\" placeholder=\"\" maxLength='3' value={this.state.green}\n                             onChange={event => this.updateSearchInput(event,2)}\n                             onKeyDown={event => {\n                            if (event.target.value === ''){\n                                //this.submitForm()\n                            }                                        \n                            else if (event.key === 'Enter') {                        \n                                //this.submitForm();\n                            }                      \n                            }}>\n                            </input>\n\n                        </th>\n                        <th>\n                        {/* <FontAwesomeIcon icon=\"minus-circle\" size=\"2x\" color=\"#ff0000\"/> */}\n                        </th>\n                        <th>\n                        {/* <FontAwesomeIcon icon=\"plus-circle\" size=\"2x\" color=\"#13bf41\"/> */}\n                        </th>\n                        <th><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div></th>\n                        <th style={{width: '500px',\n                                    alignItems: 'right' }}>                        \n                            <input className=\"slider\" id=\"greenSlider\" type=\"range\" min=\"0\" max=\"256\" defaultValue=\"3\" step=\"1\"\n                            onChange={event => this.updateGreen(event)}/>\n                        </th>\n                        <h2>{this.state.green}</h2>\n                        </tr>\n                    </tbody>\n                </table>                \n               </div>\n               <br></br>\n               <div className=\"container\">\n               <table>\n                   <tbody>\n                        <tr>                    \n                            <th>\n                            <h3>Blue&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</h3>\n                            </th>\n                            <th style={{width: '100px',\n                                    alignItems: 'right'}}>\n                            {/* <NumericInput min={0} max={256} value={50}/>   */}\n                            <input type=\"text\" class=\"form-control\" placeholder=\"\" maxLength='3' value={this.state.blue}\n                             onChange={event => this.updateSearchInput(event,3)}\n                             onKeyDown={event => {\n                            if (event.target.value === ''){\n                                //this.submitForm();\n                            }                                        \n                            else if (event.key === 'Enter') {                        \n                                //this.submitForm();\n                            }                      \n                            }}>\n                            </input>\n\n                        </th>\n                        <th>\n                        {/* <FontAwesomeIcon icon=\"minus-circle\" size=\"2x\" color=\"#ff0000\"/> */}\n                        </th>\n                        <th>\n                        {/* <FontAwesomeIcon icon=\"plus-circle\" size=\"2x\" color=\"#13bf41\"/> */}\n                        </th>\n                        <th><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div></th>\n                        <th style={{width: '500px',\n                                    alignItems: 'right' }}>                        \n                            <input className=\"slider\" id=\"blueSlider\" type=\"range\" min=\"0\" max=\"256\" defaultValue=\"3\" step=\"1\"\n                            onChange={event => this.updateBlue(event)}/>\n                        </th>\n                        <th>\n                            <h2>{this.state.blue}</h2>\n                        </th>\n                        </tr>\n                </tbody>\n            </table>                \n               </div>\n               <div className=\"container\">\n                <div className=\"form-row\">\n                    \n                </div>\n               </div>\n               <br></br>\n               <hr></hr>\n\n        \n               <div className=\"container\">\n  \n  <div className=\"card\">\n    <div className=\"card-body\" \n    style={{ backgroundColor: `rgb(${this.state.red},${this.state.green},${this.state.blue})` }}>\n        <br></br>\n        <br></br>\n        <br></br>\n        <br></br>\n        <br></br>\n        <br></br>\n        <br></br>\n        <br></br>\n        <br></br>\n        <br></br></div>\n  </div>\n</div>\n<br></br>\n         </div>\n      );\n    }\n  }\n  \n  export default ColorPicker;"]},"metadata":{},"sourceType":"module"}