{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/rushing/2019-colorpicker/color-picker/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/rushing/2019-colorpicker/color-picker/src/components/ColorPicker.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n            .input-range__track--active,\\n            .input-range__slider {\\n            background: \", \"; \\n            border-color: \", \";\\n            }\\n            \"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport '../css/HeaderBar.css';\nimport '../css/ColorPicker.css';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faStroopwafel } from '@fortawesome/free-solid-svg-icons';\nimport { faEyeDropper } from '@fortawesome/free-solid-svg-icons';\nimport NumericInput from 'react-numeric-input';\nimport InputRange from 'react-input-range';\nimport styled from 'styled-components';\nlibrary.add(faStroopwafel);\nlibrary.add(faEyeDropper);\n\nclass ColorPicker extends Component {\n  constructor() {\n    super();\n    this.state = {\n      value: 10\n    };\n  }\n\n  getInitialState() {\n    return {\n      value: 3\n    };\n  }\n\n  handleChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  SliderBar() {\n    const RangeSliderContainer = styled.div(_templateObject(), props => props.color, props => props.color);\n    return React.createElement(RangeSliderContainer, {\n      color: \"red\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(InputRange, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }));\n  } // var style = {\n  //     backgroundColor : {currentColor}  \n  //   };\n\n\n  DisplayColors() {\n    let colorBoxes = []; // Loop through all colors.\n\n    for (let i = 0; i < 10000; i++) {\n      i = i + 10; // Convert integer value to hex.\n\n      var hexCode = i.toString(16);\n      var currentColor = '#'; // Check if color hexcode is smaller than 6 and needs to be filled with 0's.\n\n      if (hexCode.length < 6) {\n        for (var y = 0; y < 6 - hexCode.length; y++) {\n          currentColor += '0';\n        }\n\n        currentColor += hexCode;\n        currentColor = currentColor.toUpperCase();\n      } //console.log(currentColor);\n\n\n      colorBoxes.push(React.createElement(\"div\", {\n        key: i,\n        className: \"colorBox\",\n        style: {\n          backgroundColor: \"\".concat(currentColor)\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"colorBoxContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, colorBoxes);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Color picker\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Red\\xA0\\xA0\\xA0\\xA0\\xA0\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(NumericInput, {\n      min: 0,\n      max: 256,\n      value: 50,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    })), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"typeinp\",\n      type: \"range\",\n      min: \"0\",\n      max: \"5\",\n      defaultValue: \"3\",\n      step: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    })))))), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Green\\xA0\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(NumericInput, {\n      min: 0,\n      max: 256,\n      value: 50,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    })), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }))))), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Blue\\xA0\\xA0\\xA0\\xA0\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(NumericInput, {\n      min: 0,\n      max: 256,\n      value: 50,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    })), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }))))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"colorDisplay\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }), this.SliderBar());\n  }\n\n}\n\nexport default ColorPicker;","map":{"version":3,"sources":["/Users/rushing/2019-colorpicker/color-picker/src/components/ColorPicker.js"],"names":["React","Component","library","FontAwesomeIcon","faStroopwafel","faEyeDropper","NumericInput","InputRange","styled","add","ColorPicker","constructor","state","value","getInitialState","handleChange","event","setState","target","SliderBar","RangeSliderContainer","div","props","color","DisplayColors","colorBoxes","i","hexCode","toString","currentColor","length","y","toUpperCase","push","backgroundColor","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport '../css/HeaderBar.css';\nimport '../css/ColorPicker.css';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faStroopwafel } from '@fortawesome/free-solid-svg-icons';\nimport { faEyeDropper} from '@fortawesome/free-solid-svg-icons';\nimport NumericInput from 'react-numeric-input';\nimport InputRange from 'react-input-range';\nimport styled from 'styled-components';\n\n\n\nlibrary.add(faStroopwafel);\nlibrary.add(faEyeDropper);\n\n\nclass ColorPicker extends Component {\n    constructor(){\n      super();\n\n      this.state = { \n          value: 10 \n        };\n\n    }\n    getInitialState() {\n        return {value: 3};\n      }\n\n      handleChange(event) {\n        this.setState({value: event.target.value});\n      }\n\n\n    SliderBar(){\n\n        const RangeSliderContainer = styled.div`\n            .input-range__track--active,\n            .input-range__slider {\n            background: ${props => props.color}; \n            border-color: ${props => props.color};\n            }\n            `;\n\n            return(  <RangeSliderContainer color=\"red\">\n            <InputRange />\n          </RangeSliderContainer>)\n\n\n    }\n    // var style = {\n    //     backgroundColor : {currentColor}  \n    //   };\n    \n    DisplayColors(){\n\n        let colorBoxes= []\n\n        // Loop through all colors.\n        for (let i = 0; i < 10000; i++) {\n\n            i = i + 10;\n\n            // Convert integer value to hex.\n            var hexCode = i.toString(16);            \n            var currentColor = '#';\n\n            // Check if color hexcode is smaller than 6 and needs to be filled with 0's.\n            if (hexCode.length < 6){\n\n                for (var y=0; y < 6 - hexCode.length; y++){\n                    currentColor += '0';\n                }\n                currentColor += hexCode;\n                currentColor = currentColor.toUpperCase();\n            }\n\n          //console.log(currentColor);\n\n          colorBoxes.push(<div key={i} className=\"colorBox\" style={{backgroundColor: `${currentColor}`}}></div>)\n          \n        }\n        return(\n            <div className=\"colorBoxContainer\">{colorBoxes}</div>\n        )\n    }\n    \n\n    render() {\n      return (        \n        <div>\n           <h1>Color picker</h1>\n               <br></br>\n               <div className=\"container\">\n               <table>\n                   <tbody>\n                    <tr>                    \n                        <th>\n                        Red&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        </th>\n                        <th>\n                        <NumericInput min={0} max={256} value={50}/>  \n                        </th>\n                        <th>\n                        \n<input id=\"typeinp\" type=\"range\" min=\"0\" max=\"5\" defaultValue=\"3\" step=\"1\"/>\n\n                        </th>\n                    </tr>\n                </tbody>\n            </table>                \n               </div>\n               <div className=\"container\">\n               <table>\n                   <tbody>\n                        <tr>                    \n                            <th>\n                            Green&nbsp;\n                            </th>\n                            <th>\n                            <NumericInput min={0} max={256} value={50}/>  \n                            </th>\n                            <th>\n\n                            </th>\n                        </tr>\n                </tbody>\n            </table>                \n               </div>\n               <div className=\"container\">\n               <table>\n                   <tbody>\n                        <tr>                    \n                            <th>\n                            Blue&nbsp;&nbsp;&nbsp;&nbsp;\n                            </th>\n                            <th>\n                            <NumericInput min={0} max={256} value={50}/>  \n                            </th>\n                            <th>\n\n                            </th>\n                        </tr>\n                </tbody>\n            </table>                \n               </div>\n               <br></br>\n               <br></br>\n               <div className=\"container\">\n                <div className=\"colorDisplay\">\n                    \n                    \n\n                </div>\n               </div>\n\n<br></br>\n{this.SliderBar()}\n{/* <InputRange\n                        maxValue={20}\n                        minValue={0}\n                        value={this.state.value}\n                        onChange={value => this.setState({ value })} /> */}\n\n            \n          {/* <div className=\"col-4\">\n                \n                </div>\n                <div className=\"col-4\">\n                \n                </div>\n                \n            </div>\n            \n\n           \n           \n           <br></br>\n           \n           <br></br>\n           Blue &nbsp;<NumericInput min={0} max={100} value={50}/>\n           <br></br>\n           <div class=\"slidecontainer\">\n                <input type=\"range\" min=\"1\" max=\"100\" value=\"50\" class=\"slider\" id=\"myRange\"></input>\n            </div>\n           <br></br>\n           {this.DisplayColors()}\n        </div>\n         */}\n         </div>\n      );\n    }\n  }\n  \n  export default ColorPicker;"]},"metadata":{},"sourceType":"module"}