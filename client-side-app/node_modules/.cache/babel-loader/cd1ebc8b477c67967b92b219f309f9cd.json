{"ast":null,"code":"var _jsxFileName = \"/Users/rushing/color-picker/client-side-app/src/components/ColorPicker.js\";\nimport React, { Component } from 'react';\nimport ColorCard from '../components/ColorCard.js';\nimport '../css/bootstrap.min.css';\nimport '../css/HeaderBar.css';\nimport '../css/ColorPicker.css';\nimport '../css/ColorSlider.css';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faStroopwafel } from '@fortawesome/free-solid-svg-icons';\nimport { faEyeDropper } from '@fortawesome/free-solid-svg-icons';\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons';\nimport { faMinusCircle } from '@fortawesome/free-solid-svg-icons';\nimport { faRandom } from '@fortawesome/free-solid-svg-icons';\nimport { faCopy } from '@fortawesome/free-solid-svg-icons';\nlibrary.add(faStroopwafel);\nlibrary.add(faEyeDropper);\nlibrary.add(faPlusCircle);\nlibrary.add(faMinusCircle);\nlibrary.add(faRandom);\nlibrary.add(faCopy);\n\nclass ColorPicker extends Component {\n  constructor() {\n    super();\n    this.removeColorCard = this.removeColorCard.bind(this);\n    this.state = {\n      favoriteColors: [],\n      colorHexCode: 0,\n      red: 0,\n      green: 0,\n      blue: 0\n    };\n  } //Set Red Color\n\n\n  setRed(inputRed) {\n    // Set the redcolor state.\n    this.setState({\n      red: inputRed\n    });\n  } // Set Green Color.\n\n\n  setGreen(inputGreen) {\n    // Set the green color state.\n    this.setState({\n      green: inputGreen\n    });\n  } // Set Blue Color.\n\n\n  setBlue(inputBlue) {\n    // Set the blue color state.\n    this.setState({\n      blue: inputBlue\n    });\n  } // Update Red Color State.\n\n\n  updateRed(event) {\n    // Set the red color state.\n    this.setState({\n      red: event.target.value\n    });\n    return true;\n  } // Update Green Color State.\n\n\n  updateGreen(event) {\n    // Set the green color state.\n    this.setState({\n      green: event.target.value\n    });\n    return true;\n  } // Update Blue Color State.\n\n\n  updateBlue(event) {\n    this.setState({\n      blue: event.target.value\n    });\n    return true;\n  } // Add favorite\n\n\n  addFavorite() {\n    var hexColorCode = this.rgb2hex(this.state.red, this.state.green, this.state.blue); //Check if selected item is already in array\n\n    if (!this.state.favoriteColors.includes(hexColorCode)) {\n      //add item to array                    \n      this.setState(prevState => ({\n        favoriteColors: [...prevState.favoriteColors, hexColorCode]\n      }));\n    }\n  }\n  /* \n      Function name: updateSearchInput\n      \n      Purpose:    Function is called when the text in the input search box has changed.\n                  The value from the event is put into searchInput variable in class state.\n              \n      Parameters:     event\n      Return:         true\n  */\n\n\n  updateSearchInput(event, colorOrder) {\n    // This is red.\n    if (colorOrder === 1) {\n      // Set the red color state.\n      this.setState({\n        red: event.target.value\n      });\n    } // This is green.\n    else if (colorOrder === 2) {\n        // Set the green color state.\n        this.setState({\n          green: event.target.value\n        });\n      } // This is blue.\n      else if (colorOrder === 3) {\n          // Set the blue color state.\n          this.setState({\n            blue: event.target.value\n          });\n        }\n\n    return true;\n  }\n  /** \n   * Convert color code to hex value  \n   * @param {component} c \n   */\n\n\n  componentToHex(c) {\n    var hex = c.toString(16);\n    return hex.length === 1 ? \"0\" + hex : hex;\n  }\n  /**\n   * Convert rgb color code to hex value\n   * @param {red} r \n   * @param {green} g \n   * @param {blue} b \n   */\n\n\n  rgbToHex(r, g, b) {\n    return \"#\" + this.componentToHex(r) + this.componentToHex(g) + this.componentToHex(b);\n  }\n\n  rgb2hex(red, green, blue) {\n    var rgb = blue | green << 8 | red << 16;\n    var returnString = '#' + (0x1000000 + rgb).toString(16).slice(1);\n    returnString = returnString.toUpperCase();\n    return returnString;\n  }\n\n  renderColorHexCode() {\n    var hexColorCode = this.rgb2hex(this.state.red, this.state.green, this.state.blue);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, hexColorCode));\n  } // Randomize the current color\n\n\n  randomizeColors() {\n    // Get random numbers.\n    var red = this.randomizeColor(this.state.red);\n    var green = this.randomizeColor(this.state.green);\n    var blue = this.randomizeColor(this.state.blue); // Assign random numbers to state.\n\n    this.setRed(red);\n    this.setGreen(green);\n    this.setBlue(blue);\n  }\n\n  randomizeColor(inputColor) {\n    if (inputColor < 257 && inputColor > -1) {\n      //valid number\n      //alert(inputColor);\n      // Create a random number between 0 and 256.\n      var randomNum = Math.floor(Math.random() * 256); //alert (randomNum);\n      // Return random color rgb value\n\n      return randomNum;\n    }\n  }\n\n  removeA(arr) {\n    var what,\n        a = arguments,\n        L = a.length,\n        ax;\n\n    while (L > 1 && arr.length) {\n      what = a[--L];\n\n      while ((ax = arr.indexOf(what)) !== -1) {\n        arr.splice(ax, 1);\n      }\n    }\n\n    return arr;\n  }\n\n  removeColorCard(color) {\n    if (this.state.favoriteColors.indexOf(color) > -1) {\n      this.setState({\n        favoriteColors: this.removeA(this.state.favoriteColors, color)\n      }); //this.state.favoriteColors.splice(color, 1);\n    }\n  }\n\n  renderFavoriteColors() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row p-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, this.state.favoriteColors.map(currentColor => React.createElement(ColorCard, {\n      cardColor: currentColor,\n      onClick: () => this.removeColorCard(currentColor),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }))));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, \"Create Color\")), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    })), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, \"Red\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\")), React.createElement(\"th\", {\n      style: {\n        width: '100px',\n        alignItems: 'right'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      placeholder: \"\",\n      maxLength: \"3\",\n      value: this.state.red,\n      onChange: event => this.updateSearchInput(event, 1),\n      onKeyDown: event => {\n        if (event.target.value === '') {//this.submitForm()\n        } else if (event.key === 'Enter') {//this.submitForm();\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    })), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }, \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\")), React.createElement(\"th\", {\n      style: {\n        width: '600px',\n        alignItems: 'right'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"slider\",\n      id: \"redSlider\",\n      type: \"range\",\n      min: \"0\",\n      max: \"256\",\n      defaultValue: \"3\",\n      step: \"1\",\n      onChange: event => this.updateRed(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    })), React.createElement(\"th\", {\n      style: {\n        width: '50px',\n        alignItems: 'right'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }, this.state.red)))))), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }, \"Green\\xA0\\xA0\\xA0\")), React.createElement(\"th\", {\n      style: {\n        width: '100px',\n        alignItems: 'right'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      placeholder: \"\",\n      maxLength: \"3\",\n      value: this.state.green,\n      onChange: event => this.updateSearchInput(event, 2),\n      onKeyDown: event => {\n        if (event.target.value === '') {//this.submitForm()\n        } else if (event.key === 'Enter') {//this.submitForm();\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    })), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361\n      },\n      __self: this\n    }), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364\n      },\n      __self: this\n    }), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    }, \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\")), React.createElement(\"th\", {\n      style: {\n        width: '600px',\n        alignItems: 'right'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"slider\",\n      id: \"greenSlider\",\n      type: \"range\",\n      min: \"0\",\n      max: \"256\",\n      defaultValue: \"3\",\n      step: \"1\",\n      onChange: event => this.updateGreen(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370\n      },\n      __self: this\n    })), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373\n      },\n      __self: this\n    }, this.state.green))))), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384\n      },\n      __self: this\n    }, \"Blue\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\")), React.createElement(\"th\", {\n      style: {\n        width: '100px',\n        alignItems: 'right'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      placeholder: \"\",\n      maxLength: \"3\",\n      value: this.state.blue,\n      onChange: event => this.updateSearchInput(event, 3),\n      onKeyDown: event => {\n        if (event.target.value === '') {//this.submitForm();\n        } else if (event.key === 'Enter') {//this.submitForm();\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389\n      },\n      __self: this\n    })), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402\n      },\n      __self: this\n    }, \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\")), React.createElement(\"th\", {\n      style: {\n        width: '600px',\n        alignItems: 'right'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"slider\",\n      id: \"blueSlider\",\n      type: \"range\",\n      min: \"0\",\n      max: \"256\",\n      defaultValue: \"3\",\n      step: \"1\",\n      onChange: event => this.updateBlue(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405\n      },\n      __self: this\n    })), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409\n      },\n      __self: this\n    }, this.state.blue)))))), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420\n      },\n      __self: this\n    }, this.renderColorHexCode())), React.createElement(\"div\", {\n      className: \"col-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423\n      },\n      __self: this\n    }, \"rgb(\".concat(this.state.red, \", \").concat(this.state.green, \", \").concat(this.state.blue, \")\"))), React.createElement(\"div\", {\n      className: \"col-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-success\",\n      onClick: event => this.addFavorite(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426\n      },\n      __self: this\n    }, \" \", React.createElement(\"h3\", {\n      class: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: \"copy\",\n      size: \"1x\",\n      color: \"white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427\n      },\n      __self: this\n    }), \" Copy Color \"))), React.createElement(\"div\", {\n      className: \"col-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-dark\",\n      onClick: event => this.randomizeColors(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430\n      },\n      __self: this\n    }, \" \", React.createElement(\"h3\", {\n      class: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: \"random\",\n      size: \"1x\",\n      color: \"#ffe710\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431\n      },\n      __self: this\n    }), \" Random\")))), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"form-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-success\",\n      onClick: event => this.addFavorite(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438\n      },\n      __self: this\n    }, \" \", React.createElement(\"h3\", {\n      class: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: \"copy\",\n      size: \"1x\",\n      color: \"white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439\n      },\n      __self: this\n    }), \" Copy Color \"))), React.createElement(\"div\", {\n      className: \"col-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-dark\",\n      onClick: event => this.randomizeColors(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442\n      },\n      __self: this\n    }, \" \", React.createElement(\"h3\", {\n      class: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: \"random\",\n      size: \"1x\",\n      color: \"#ffe710\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443\n      },\n      __self: this\n    }), \" Random\"))))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container\",\n      style: {\n        backgroundColor: \"rgb(\".concat(this.state.red, \",\").concat(this.state.green, \",\").concat(this.state.blue, \")\")\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"shadow-sm p-3 mb-5 rounded\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468\n      },\n      __self: this\n    }))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472\n      },\n      __self: this\n    }, this.renderFavoriteColors()), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default ColorPicker;","map":{"version":3,"sources":["/Users/rushing/color-picker/client-side-app/src/components/ColorPicker.js"],"names":["React","Component","ColorCard","library","FontAwesomeIcon","faStroopwafel","faEyeDropper","faPlusCircle","faMinusCircle","faRandom","faCopy","add","ColorPicker","constructor","removeColorCard","bind","state","favoriteColors","colorHexCode","red","green","blue","setRed","inputRed","setState","setGreen","inputGreen","setBlue","inputBlue","updateRed","event","target","value","updateGreen","updateBlue","addFavorite","hexColorCode","rgb2hex","includes","prevState","updateSearchInput","colorOrder","componentToHex","c","hex","toString","length","rgbToHex","r","g","b","rgb","returnString","slice","toUpperCase","renderColorHexCode","randomizeColors","randomizeColor","inputColor","randomNum","Math","floor","random","removeA","arr","what","a","arguments","L","ax","indexOf","splice","color","renderFavoriteColors","map","currentColor","render","width","alignItems","key","backgroundColor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ColorCard from '../components/ColorCard.js';\n\nimport '../css/bootstrap.min.css';\nimport '../css/HeaderBar.css';\nimport '../css/ColorPicker.css';\nimport '../css/ColorSlider.css';\n\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faStroopwafel } from '@fortawesome/free-solid-svg-icons';\nimport { faEyeDropper} from '@fortawesome/free-solid-svg-icons';\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons';\nimport { faMinusCircle } from '@fortawesome/free-solid-svg-icons';\nimport { faRandom } from '@fortawesome/free-solid-svg-icons';\nimport {faCopy } from '@fortawesome/free-solid-svg-icons';\n\n\n\nlibrary.add(faStroopwafel);\nlibrary.add(faEyeDropper);\nlibrary.add(faPlusCircle);\nlibrary.add(faMinusCircle);\nlibrary.add(faRandom);\nlibrary.add(faCopy);\n\n\nclass ColorPicker extends Component {\n    constructor(){\n      super();\n      this.removeColorCard = this.removeColorCard.bind(this);\n\n\n      this.state = { \n          favoriteColors: [],\n          colorHexCode: 0,\n          red: 0,\n          green: 0,\n          blue: 0,\n        };\n\n    }\n\n    \n\n    //Set Red Color\n    setRed(inputRed){        \n\n        // Set the redcolor state.\n        this.setState({\n            red: inputRed\n        });\n    }\n\n    // Set Green Color.\n    setGreen(inputGreen){\n        \n        // Set the green color state.\n        this.setState({\n            green: inputGreen\n        });\n    }\n\n    // Set Blue Color.\n    setBlue(inputBlue){\n    \n        // Set the blue color state.\n        this.setState({\n            blue: inputBlue\n        });\n    }\n\n    // Update Red Color State.\n    updateRed(event) {\n\n        // Set the red color state.\n        this.setState({\n          red: event.target.value\n        });\n        \n        return true;\n    }\n\n    // Update Green Color State.\n    updateGreen(event) {\n\n        // Set the green color state.\n        this.setState({\n          green: event.target.value\n        });\n        \n        return true;\n    }\n\n    // Update Blue Color State.\n    updateBlue(event) {\n\n        this.setState({\n          blue: event.target.value\n        });\n        \n        return true;\n    }\n\n    // Add favorite\n    addFavorite() {  \n         \n        var hexColorCode = this.rgb2hex(this.state.red, this.state.green, this.state.blue);\n\n        //Check if selected item is already in array\n        if (!this.state.favoriteColors.includes(hexColorCode)){\n                        \n            //add item to array                    \n            this.setState(prevState => ({\n                favoriteColors: [...prevState.favoriteColors, hexColorCode]\n            }))\n        }\n    }\n\n\n\n    /* \n        Function name: updateSearchInput\n        \n        Purpose:    Function is called when the text in the input search box has changed.\n                    The value from the event is put into searchInput variable in class state.\n                \n        Parameters:     event\n        Return:         true\n    */\n   updateSearchInput(event, colorOrder) {\n\n    // This is red.\n    if (colorOrder === 1){\n\n        \n        // Set the red color state.\n        this.setState({\n            red: event.target.value\n        });\n        \n    }\n\n    // This is green.\n    else if (colorOrder === 2){\n\n        // Set the green color state.\n        this.setState({\n            green: event.target.value\n        });\n    }\n\n    // This is blue.\n    else if (colorOrder === 3){\n\n        // Set the blue color state.\n        this.setState({\n            blue: event.target.value\n        });\n    }\n\n\n    \n    return true;\n}\n\n    /** \n     * Convert color code to hex value  \n     * @param {component} c \n     */\n    componentToHex(c) {\n        var hex = c.toString(16);\n        return hex.length === 1 ? \"0\" + hex : hex;\n    }\n  \n    /**\n     * Convert rgb color code to hex value\n     * @param {red} r \n     * @param {green} g \n     * @param {blue} b \n     */\n    rgbToHex(r, g, b) {        \n\n        return \"#\" + this.componentToHex(r) + this.componentToHex(g) + this.componentToHex(b);\n    }\n  \n\n    rgb2hex(red, green, blue) {\n        var rgb = blue | (green << 8) | (red << 16);\n\n        var returnString = '#' + (0x1000000 + rgb).toString(16).slice(1);        \n        returnString = returnString.toUpperCase();\n        \n        return returnString;\n    }    \n\n    renderColorHexCode(){\n\n        var hexColorCode = this.rgb2hex(this.state.red, this.state.green, this.state.blue);\n\n        return (<div><h3>{hexColorCode}</h3></div>)\n    }\n\n    // Randomize the current color\n    randomizeColors(){\n\n    // Get random numbers.\n    var red = this.randomizeColor(this.state.red);\n    var green = this.randomizeColor(this.state.green);\n    var blue = this.randomizeColor(this.state.blue);\n\n    // Assign random numbers to state.\n    this.setRed(red);\n    this.setGreen(green);\n    this.setBlue(blue);\n        \n    }\n\n    randomizeColor(inputColor){\n\n        if ((inputColor < 257) && (inputColor > -1)){\n            //valid number\n            //alert(inputColor);\n\n            // Create a random number between 0 and 256.\n            var randomNum = Math.floor(Math.random() * 256);\n\n\n            //alert (randomNum);\n            // Return random color rgb value\n            return randomNum;\n        }\n    }\n\n\n\n    removeA(arr) {\n        var what, a = arguments, L = a.length, ax;\n        while (L > 1 && arr.length) {\n            what = a[--L];\n            while ((ax= arr.indexOf(what)) !== -1) {\n                arr.splice(ax, 1);\n            }\n        }\n        return arr;\n    }\n\n\n\n    removeColorCard(color){\n\n        if (this.state.favoriteColors.indexOf(color) > -1) {\n\n            this.setState({\n                favoriteColors: this.removeA(this.state.favoriteColors, color)\n\n            })\n\n            //this.state.favoriteColors.splice(color, 1);\n\n\n        } \n    }\n\n    renderFavoriteColors(){\n\n\n        return (<div className=\"container\">\n            <div className=\"row p-5\">\n\n            {this.state.favoriteColors.map(currentColor=>   \n            \n                <ColorCard cardColor={currentColor} onClick={() => this.removeColorCard(currentColor)}></ColorCard>\n            )}\n        </div>\n        </div>)\n    }\n\n\n\n    render() {\n      return (        \n        <div>\n            \n            <div className=\"container\">\n                <br></br>\n                <h2>Create Color</h2>\n             </div>\n\n             <div className=\"row\">\n                 <div className=\"col-2\"></div>\n             </div>\n            \n            <hr></hr>\n            \n               <div className=\"container\">\n                  <table>\n                    <tbody>\n                        <tr>                    \n                            <th>\n                                <h3>Red&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</h3>\n                            </th>\n                            <th style={{width: '100px', alignItems: 'right'}}>                            \n                                <input type=\"text\" className=\"form-control\" placeholder=\"\" maxLength='3' value={this.state.red}\n                                    onChange={event => this.updateSearchInput(event,1)}\n                                    onKeyDown={event => {\n                                        if (event.target.value === ''){\n                                            //this.submitForm()\n                                        }                                        \n                                        else if (event.key === 'Enter') {                        \n                                            //this.submitForm();\n                                        }                      \n                                    }}>\n                                </input>\n                            </th>\n\n                            <th><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div></th>\n                            \n                            <th style={{width: '600px',\n                                        alignItems: 'right' }}>                        \n                                <input className=\"slider\" id=\"redSlider\" type=\"range\" min=\"0\" max=\"256\" defaultValue=\"3\" step=\"1\"\n                                onChange={event => this.updateRed(event)}\n                                />\n                            </th>\n                            <th style={{width: '50px',\n                                        alignItems: 'right' }}>      \n                            <h1>{this.state.red}</h1>\n                            </th>\n                            \n\n\n                        </tr>\n                    </tbody>\n                </table>                \n               </div>\n               {/* <br></br> */}\n               <div className=\"container\">\n               <table>\n                   <tbody>\n                        <tr>                    \n                            <th>\n                            <h3>Green&nbsp;&nbsp;&nbsp;</h3>\n                            </th>\n\n                            <th style={{width: '100px',\n                                    alignItems: 'right'}}>\n                            {/* <NumericInput min={0} max={256} value={50}/>   */}\n                            <input type=\"text\" className=\"form-control\" placeholder=\"\" maxLength='3' value={this.state.green}\n                             onChange={event => this.updateSearchInput(event,2)}\n                             onKeyDown={event => {\n                            if (event.target.value === ''){\n                                //this.submitForm()\n                            }                                        \n                            else if (event.key === 'Enter') {                        \n                                //this.submitForm();\n                            }                      \n                            }}>\n                            </input>\n\n                        </th>\n                        <th>\n                        {/* <FontAwesomeIcon icon=\"minus-circle\" size=\"2x\" color=\"#ff0000\"/> */}\n                        </th>\n                        <th>\n                        {/* <FontAwesomeIcon icon=\"plus-circle\" size=\"2x\" color=\"#13bf41\"/> */}\n                        </th>\n                        <th><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div></th>\n                        <th style={{width: '600px',\n                                    alignItems: 'right' }}>                        \n                            <input className=\"slider\" id=\"greenSlider\" type=\"range\" min=\"0\" max=\"256\" defaultValue=\"3\" step=\"1\"\n                            onChange={event => this.updateGreen(event)}/>\n                        </th>\n                        <h1>{this.state.green}</h1>\n                        </tr>\n                    </tbody>\n                </table>                \n               </div>\n               {/* <br></br> */}\n               <div className=\"container\">\n               <table>\n                   <tbody>\n                        <tr>                    \n                            <th>\n                            <h3>Blue&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</h3>\n                            </th>\n                            <th style={{width: '100px',\n                                    alignItems: 'right'}}>\n                            {/* <NumericInput min={0} max={256} value={50}/>   */}\n                            <input type=\"text\" className=\"form-control\" placeholder=\"\" maxLength='3' value={this.state.blue}\n                             onChange={event => this.updateSearchInput(event,3)}\n                             onKeyDown={event => {\n                            if (event.target.value === ''){\n                                //this.submitForm();\n                            }                                        \n                            else if (event.key === 'Enter') {                        \n                                //this.submitForm();\n                            }                      \n                            }}>\n                            </input>\n\n                        </th>\n                        <th><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div></th>\n                        <th style={{width: '600px',\n                                    alignItems: 'right' }}>                        \n                            <input className=\"slider\" id=\"blueSlider\" type=\"range\" min=\"0\" max=\"256\" defaultValue=\"3\" step=\"1\"\n                            onChange={event => this.updateBlue(event)}/>\n                        </th>\n                        <th>\n                            <h1>{this.state.blue}</h1>\n                        </th>\n                        </tr>\n                </tbody>\n            </table>                \n               </div>\n               <hr></hr>\n\n               <div className=\"container\">\n                <div className=\"form-row\">\n                    <div className=\"col-3\">\n                        <div>{this.renderColorHexCode()}</div>\n                    </div>\n                    <div className=\"col-3\">\n                        <h3>{`rgb(${this.state.red}, ${this.state.green}, ${this.state.blue})`}</h3>\n                    </div>\n                    <div className=\"col-3\">                    \n                        <button type=\"button\" className=\"btn btn-success\"                        \n                            onClick={event => this.addFavorite(event)}> <h3 class><FontAwesomeIcon icon=\"copy\" size=\"1x\" color=\"white\"></FontAwesomeIcon> Copy Color </h3></button>        \n                    </div>            \n                    <div className=\"col-2\">                    \n                        <button type=\"button\" className=\"btn btn-dark\"                        \n                            onClick={event => this.randomizeColors(event)}> <h3 class><FontAwesomeIcon icon=\"random\" size=\"1x\" color=\"#ffe710\"></FontAwesomeIcon> Random</h3></button>        \n                    </div>  \n                </div>\n                <hr></hr>\n                <div className=\"form-row\">\n                \n                <div className=\"col-3\">                    \n                        <button type=\"button\" className=\"btn btn-success\"                        \n                            onClick={event => this.addFavorite(event)}> <h3 class><FontAwesomeIcon icon=\"copy\" size=\"1x\" color=\"white\"></FontAwesomeIcon> Copy Color </h3></button>        \n                    </div>            \n                    <div className=\"col-2\">                    \n                        <button type=\"button\" className=\"btn btn-dark\"                        \n                            onClick={event => this.randomizeColors(event)}> <h3 class><FontAwesomeIcon icon=\"random\" size=\"1x\" color=\"#ffe710\"></FontAwesomeIcon> Random</h3></button>        \n                    </div>         \n                </div>\n               </div>         \n<br></br>\n    <div className=\"container\" \n    style={{ backgroundColor: `rgb(${this.state.red},${this.state.green},${this.state.blue})` }}>\n        <div className=\"shadow-sm p-3 mb-5 rounded\">\n        <br></br>\n        <br></br>\n        <br></br>\n        \n        <br></br>\n        <br></br>\n        <br></br>\n        <br></br>\n        <br></br>\n        <br></br>\n        <br></br>\n        <br></br>\n        <br></br>\n        <br></br>\n        <br></br>\n  \n        <br></br>\n        <br></br>\n        </div>\n</div>\n<br></br>\n<div>{this.renderFavoriteColors()}</div>\n<br></br>\n         </div>\n      );\n    }\n  }\n  \n  export default ColorPicker;"]},"metadata":{},"sourceType":"module"}