{"ast":null,"code":"var _jsxFileName = \"/Users/rushing/color-picker/client-side-app/src/components/ColorPicker.js\";\nimport React, { Component } from 'react';\nimport '../css/bootstrap.min.css';\nimport '../css/HeaderBar.css';\nimport '../css/ColorPicker.css';\nimport '../css/ColorSlider.css';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faStroopwafel } from '@fortawesome/free-solid-svg-icons';\nimport { faEyeDropper } from '@fortawesome/free-solid-svg-icons';\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons';\nimport { faMinusCircle } from '@fortawesome/free-solid-svg-icons';\nlibrary.add(faStroopwafel);\nlibrary.add(faEyeDropper);\nlibrary.add(faPlusCircle);\nlibrary.add(faMinusCircle);\n\nclass ColorPicker extends Component {\n  constructor() {\n    super();\n    this.state = {\n      favoriteColors: [],\n      colorHexCode: 0,\n      red: 0,\n      green: 0,\n      blue: 0\n    };\n  }\n\n  updateRed(event) {\n    this.setState({\n      red: event.target.value\n    });\n    return true;\n  }\n\n  updateGreen(event) {\n    this.setState({\n      green: event.target.value\n    });\n    return true;\n  }\n\n  updateBlue(event) {\n    this.setState({\n      blue: event.target.value\n    });\n    return true;\n  }\n\n  addColor(event) {\n    // Create \n    // Populate html object for color card.\n    this.state.favoriteColors.push(); // this.setState({\n    //   red: event.target.value\n    // });\n\n    return true;\n  }\n  /* \n      Function name: updateSearchInput\n      \n      Purpose:    Function is called when the text in the input search box has changed.\n                  The value from the event is put into searchInput variable in class state.\n              \n      Parameters:     event\n      Return:         true\n  */\n\n\n  updateSearchInput(event, colorOrder) {\n    // This is red.\n    if (colorOrder === 1) {\n      // Set the red color state.\n      this.setState({\n        red: event.target.value\n      });\n    } // This is green.\n    else if (colorOrder === 2) {\n        // Set the green color state.\n        this.setState({\n          green: event.target.value\n        });\n      } // This is blue.\n      else if (colorOrder === 3) {\n          // Set the blue color state.\n          this.setState({\n            blue: event.target.value\n          });\n        }\n\n    return true;\n  }\n\n  componentToHex(c) {\n    var hex = c.toString(16);\n    return hex.length == 1 ? \"0\" + hex : hex;\n  }\n\n  rgbToHex(r, g, b) {\n    return \"#\" + this.componentToHex(r) + this.componentToHex(g) + this.componentToHex(b);\n  } //alert(rgbToHex(0, 51, 255)); // #0033ff\n\n\n  rgb2hex(red, green, blue) {\n    var rgb = blue | green << 8 | red << 16;\n    var returnString = '#' + (0x1000000 + rgb).toString(16).slice(1);\n    return '#' + (0x1000000 + rgb).toString(16).slice(1);\n  }\n\n  renderColorHexCode() {\n    var hexColorCode = this.rgb2hex(this.state.red, this.state.green, this.state.blue); // Set the green color state.\n\n    this.setState({\n      hexColorCode: hexColorCode\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, hexColorCode));\n  }\n\n  DisplayColors() {\n    let colorBoxes = []; // Loop through all colors.\n\n    for (let i = 0; i < 10000; i++) {\n      i = i + 10; // Convert integer value to hex.\n\n      var hexCode = i.toString(16);\n      var currentColor = '#'; // Check if color hexcode is smaller than 6 and needs to be filled with 0's.\n\n      if (hexCode.length < 6) {\n        for (var y = 0; y < 6 - hexCode.length; y++) {\n          currentColor += '0';\n        }\n\n        currentColor += hexCode;\n        currentColor = currentColor.toUpperCase();\n      }\n\n      colorBoxes.push(React.createElement(\"div\", {\n        key: i,\n        className: \"colorBox\",\n        style: {\n          backgroundColor: \"\".concat(currentColor)\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"colorBoxContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, colorBoxes);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, \"Create Color\")), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, \"Red\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\")), React.createElement(\"th\", {\n      style: {\n        width: '100px',\n        alignItems: 'right'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      class: \"form-control\",\n      placeholder: \"\",\n      maxLength: \"3\",\n      value: this.state.red,\n      onChange: event => this.updateSearchInput(event, 1),\n      onKeyDown: event => {\n        if (event.target.value === '') {//this.submitForm()\n        } else if (event.key === 'Enter') {//this.submitForm();\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    })), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\")), React.createElement(\"th\", {\n      style: {\n        width: '600px',\n        alignItems: 'right'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"slider\",\n      id: \"redSlider\",\n      type: \"range\",\n      min: \"0\",\n      max: \"256\",\n      defaultValue: \"3\",\n      step: \"1\",\n      onChange: event => this.updateRed(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    })), React.createElement(\"th\", {\n      style: {\n        width: '50px',\n        alignItems: 'right'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, this.state.red)))))), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, \"Green\\xA0\\xA0\\xA0\")), React.createElement(\"th\", {\n      style: {\n        width: '100px',\n        alignItems: 'right'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      class: \"form-control\",\n      placeholder: \"\",\n      maxLength: \"3\",\n      value: this.state.green,\n      onChange: event => this.updateSearchInput(event, 2),\n      onKeyDown: event => {\n        if (event.target.value === '') {//this.submitForm()\n        } else if (event.key === 'Enter') {//this.submitForm();\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    })), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\")), React.createElement(\"th\", {\n      style: {\n        width: '600px',\n        alignItems: 'right'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"slider\",\n      id: \"greenSlider\",\n      type: \"range\",\n      min: \"0\",\n      max: \"256\",\n      defaultValue: \"3\",\n      step: \"1\",\n      onChange: event => this.updateGreen(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    })), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, this.state.green))))), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, \"Blue\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\")), React.createElement(\"th\", {\n      style: {\n        width: '100px',\n        alignItems: 'right'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      class: \"form-control\",\n      placeholder: \"\",\n      maxLength: \"3\",\n      value: this.state.blue,\n      onChange: event => this.updateSearchInput(event, 3),\n      onKeyDown: event => {\n        if (event.target.value === '') {//this.submitForm();\n        } else if (event.key === 'Enter') {//this.submitForm();\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    })), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }, \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\")), React.createElement(\"th\", {\n      style: {\n        width: '600px',\n        alignItems: 'right'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"slider\",\n      id: \"blueSlider\",\n      type: \"range\",\n      min: \"0\",\n      max: \"256\",\n      defaultValue: \"3\",\n      step: \"1\",\n      onChange: event => this.updateBlue(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    })), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }, this.state.blue)))))), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338\n      },\n      __self: this\n    }, this.renderColorHexCode())), React.createElement(\"div\", {\n      className: \"col-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-success\",\n      onClick: event => this.addColor(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }, \" Copy Color \")), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-body\",\n      style: {\n        backgroundColor: \"rgb(\".concat(this.state.red, \",\").concat(this.state.green, \",\").concat(this.state.blue, \")\")\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364\n      },\n      __self: this\n    })))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default ColorPicker;","map":{"version":3,"sources":["/Users/rushing/color-picker/client-side-app/src/components/ColorPicker.js"],"names":["React","Component","library","FontAwesomeIcon","faStroopwafel","faEyeDropper","faPlusCircle","faMinusCircle","add","ColorPicker","constructor","state","favoriteColors","colorHexCode","red","green","blue","updateRed","event","setState","target","value","updateGreen","updateBlue","addColor","push","updateSearchInput","colorOrder","componentToHex","c","hex","toString","length","rgbToHex","r","g","b","rgb2hex","rgb","returnString","slice","renderColorHexCode","hexColorCode","DisplayColors","colorBoxes","i","hexCode","currentColor","y","toUpperCase","backgroundColor","render","width","alignItems","key"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport '../css/bootstrap.min.css';\nimport '../css/HeaderBar.css';\nimport '../css/ColorPicker.css';\nimport '../css/ColorSlider.css';\n\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faStroopwafel } from '@fortawesome/free-solid-svg-icons';\nimport { faEyeDropper} from '@fortawesome/free-solid-svg-icons';\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons';\nimport { faMinusCircle } from '@fortawesome/free-solid-svg-icons';\n\n\n\nlibrary.add(faStroopwafel);\nlibrary.add(faEyeDropper);\nlibrary.add(faPlusCircle);\nlibrary.add(faMinusCircle);\n\n\nclass ColorPicker extends Component {\n    constructor(){\n      super();\n\n      this.state = { \n          favoriteColors: [],\n          colorHexCode: 0,\n          red: 0,\n          green: 0,\n          blue: 0,\n        };\n\n    }\n    updateRed(event) {\n\n        this.setState({\n          red: event.target.value\n        });\n        \n        return true;\n    }\n\n    updateGreen(event) {\n\n        this.setState({\n          green: event.target.value\n        });\n        \n        return true;\n    }\n\n    updateBlue(event) {\n\n        this.setState({\n          blue: event.target.value\n        });\n        \n        return true;\n    }\n\n    addColor(event) {\n\n        // Create \n\n        // Populate html object for color card.\n        this.state.favoriteColors.push()\n        // this.setState({\n        //   red: event.target.value\n        // });\n        \n        return true;\n    }\n\n\n\n    /* \n        Function name: updateSearchInput\n        \n        Purpose:    Function is called when the text in the input search box has changed.\n                    The value from the event is put into searchInput variable in class state.\n                \n        Parameters:     event\n        Return:         true\n    */\n   updateSearchInput(event, colorOrder) {\n\n    // This is red.\n    if (colorOrder === 1){\n\n        \n        // Set the red color state.\n        this.setState({\n            red: event.target.value\n        });\n        \n    }\n\n    // This is green.\n    else if (colorOrder === 2){\n\n        // Set the green color state.\n        this.setState({\n            green: event.target.value\n        });\n    }\n\n    // This is blue.\n    else if (colorOrder === 3){\n\n        // Set the blue color state.\n        this.setState({\n            blue: event.target.value\n        });\n    }\n\n\n    \n    return true;\n}\n\n    componentToHex(c) {\n        var hex = c.toString(16);\n        return hex.length == 1 ? \"0\" + hex : hex;\n    }\n  \n    rgbToHex(r, g, b) {        \n\n        return \"#\" + this.componentToHex(r) + this.componentToHex(g) + this.componentToHex(b);\n  }\n  \n  //alert(rgbToHex(0, 51, 255)); // #0033ff\n\n    rgb2hex(red, green, blue) {\n        var rgb = blue | (green << 8) | (red << 16);\n\n        var returnString = '#' + (0x1000000 + rgb).toString(16).slice(1);        \n\n        return '#' + (0x1000000 + rgb).toString(16).slice(1);\n    }\n\n    renderColorHexCode(){\n\n\n        var hexColorCode = this.rgb2hex(this.state.red, this.state.green, this.state.blue);\n\n            // Set the green color state.\n            this.setState({\n               hexColorCode: hexColorCode\n            });\n\n        return (<div><h1>{hexColorCode}</h1></div>)\n    }\n\n\n    DisplayColors(){\n\n        let colorBoxes= []\n\n        // Loop through all colors.\n        for (let i = 0; i < 10000; i++) {\n\n            i = i + 10;\n\n            // Convert integer value to hex.\n            var hexCode = i.toString(16);            \n            var currentColor = '#';\n\n            // Check if color hexcode is smaller than 6 and needs to be filled with 0's.\n            if (hexCode.length < 6){\n\n                for (var y=0; y < 6 - hexCode.length; y++){\n                    currentColor += '0';\n                }\n                currentColor += hexCode;\n                currentColor = currentColor.toUpperCase();\n            }          \n\n          colorBoxes.push(<div key={i} className=\"colorBox\" style={{backgroundColor: `${currentColor}`}}></div>)\n          \n        }\n        return(\n            <div className=\"colorBoxContainer\">{colorBoxes}</div>\n        )\n    }\n    \n\n    render() {\n      return (        \n        <div>\n            <br></br>\n            <div className=\"container\">\n                <h1>Create Color</h1>\n             </div>\n            \n            <hr></hr>\n            <br></br>               \n               <div className=\"container\">\n                  <table>\n                    <tbody>\n                        <tr>                    \n                            <th>\n                                <h3>Red&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</h3>\n                            </th>\n                            <th style={{width: '100px', alignItems: 'right'}}>                            \n                                <input type=\"text\" class=\"form-control\" placeholder=\"\" maxLength='3' value={this.state.red}\n                                    onChange={event => this.updateSearchInput(event,1)}\n                                    onKeyDown={event => {\n                                        if (event.target.value === ''){\n                                            //this.submitForm()\n                                        }                                        \n                                        else if (event.key === 'Enter') {                        \n                                            //this.submitForm();\n                                        }                      \n                                    }}>\n                                </input>\n                            </th>\n                            <th>\n                            {/* <FontAwesomeIcon icon=\"minus-circle\" size=\"2x\" color=\"#ff0000\" /> */}\n                            \n                            </th>\n                            <th>\n                            {/* <FontAwesomeIcon icon=\"plus-circle\" size=\"2x\" color=\"#13bf41\"/> */}\n                            </th>\n                            <th><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div></th>\n                            \n                            <th style={{width: '600px',\n                                        alignItems: 'right' }}>                        \n                                <input className=\"slider\" id=\"redSlider\" type=\"range\" min=\"0\" max=\"256\" defaultValue=\"3\" step=\"1\"\n                                onChange={event => this.updateRed(event)}\n                                />\n                            </th>\n                            <th style={{width: '50px',\n                                        alignItems: 'right' }}>      \n                            <h1>{this.state.red}</h1>\n                            </th>\n                            \n\n\n                        </tr>\n                    </tbody>\n                </table>                \n               </div>\n               {/* <br></br> */}\n               <div className=\"container\">\n               <table>\n                   <tbody>\n                        <tr>                    \n                            <th>\n                            <h3>Green&nbsp;&nbsp;&nbsp;</h3>\n                            </th>\n\n                            <th style={{width: '100px',\n                                    alignItems: 'right'}}>\n                            {/* <NumericInput min={0} max={256} value={50}/>   */}\n                            <input type=\"text\" class=\"form-control\" placeholder=\"\" maxLength='3' value={this.state.green}\n                             onChange={event => this.updateSearchInput(event,2)}\n                             onKeyDown={event => {\n                            if (event.target.value === ''){\n                                //this.submitForm()\n                            }                                        \n                            else if (event.key === 'Enter') {                        \n                                //this.submitForm();\n                            }                      \n                            }}>\n                            </input>\n\n                        </th>\n                        <th>\n                        {/* <FontAwesomeIcon icon=\"minus-circle\" size=\"2x\" color=\"#ff0000\"/> */}\n                        </th>\n                        <th>\n                        {/* <FontAwesomeIcon icon=\"plus-circle\" size=\"2x\" color=\"#13bf41\"/> */}\n                        </th>\n                        <th><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div></th>\n                        <th style={{width: '600px',\n                                    alignItems: 'right' }}>                        \n                            <input className=\"slider\" id=\"greenSlider\" type=\"range\" min=\"0\" max=\"256\" defaultValue=\"3\" step=\"1\"\n                            onChange={event => this.updateGreen(event)}/>\n                        </th>\n                        <h1>{this.state.green}</h1>\n                        </tr>\n                    </tbody>\n                </table>                \n               </div>\n               {/* <br></br> */}\n               <div className=\"container\">\n               <table>\n                   <tbody>\n                        <tr>                    \n                            <th>\n                            <h3>Blue&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</h3>\n                            </th>\n                            <th style={{width: '100px',\n                                    alignItems: 'right'}}>\n                            {/* <NumericInput min={0} max={256} value={50}/>   */}\n                            <input type=\"text\" class=\"form-control\" placeholder=\"\" maxLength='3' value={this.state.blue}\n                             onChange={event => this.updateSearchInput(event,3)}\n                             onKeyDown={event => {\n                            if (event.target.value === ''){\n                                //this.submitForm();\n                            }                                        \n                            else if (event.key === 'Enter') {                        \n                                //this.submitForm();\n                            }                      \n                            }}>\n                            </input>\n\n                        </th>\n                        <th>\n                        {/* <FontAwesomeIcon icon=\"minus-circle\" size=\"2x\" color=\"#ff0000\"/> */}\n                        </th>\n                        <th>\n                        {/* <FontAwesomeIcon icon=\"plus-circle\" size=\"2x\" color=\"#13bf41\"/> */}\n                        </th>\n                        <th><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div></th>\n                        <th style={{width: '600px',\n                                    alignItems: 'right' }}>                        \n                            <input className=\"slider\" id=\"blueSlider\" type=\"range\" min=\"0\" max=\"256\" defaultValue=\"3\" step=\"1\"\n                            onChange={event => this.updateBlue(event)}/>\n                        </th>\n                        <th>\n                            <h1>{this.state.blue}</h1>\n                        </th>\n                        </tr>\n                </tbody>\n            </table>                \n               </div>\n\n               {/* <br></br> */}\n               <hr></hr>\n\n               <div className=\"container\">\n                <div className=\"form-row\">\n\n                    <div className=\"col-2\">\n                        <div>{this.renderColorHexCode()}</div>\n                    </div>\n\n                    <div className=\"col-6\">                    \n                        <button type=\"button\" class=\"btn btn-success\"\n                            onClick={event => this.addColor(event)}> Copy Color </button>        \n                    </div>\n                    <h3></h3>\n                </div>\n               </div>               \n               <br></br>\n               <div className=\"container\">\n  \n  <div className=\"card\">\n    <div className=\"card-body\" \n    style={{ backgroundColor: `rgb(${this.state.red},${this.state.green},${this.state.blue})` }}>\n        <br></br>\n        <br></br>\n        <br></br>\n        <br></br>\n        <br></br>\n        <br></br>\n        <br></br>\n        <br></br>\n  \n        <br></br>\n        <br></br></div>\n  </div>\n</div>\n<br></br>\n         </div>\n      );\n    }\n  }\n  \n  export default ColorPicker;"]},"metadata":{},"sourceType":"module"}